/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as ReportsIndexImport } from './routes/reports/index'
import { Route as SettingsTestMethodsIndexImport } from './routes/settings/test-methods/index'
import { Route as SettingsStaffIndexImport } from './routes/settings/staff/index'
import { Route as SettingsRecommendationsIndexImport } from './routes/settings/recommendations/index'
import { Route as SettingsMutationsIndexImport } from './routes/settings/mutations/index'
import { Route as SettingsIllnessesIndexImport } from './routes/settings/illnesses/index'
import { Route as SettingsGenesIndexImport } from './routes/settings/genes/index'
import { Route as SettingsDiagnosesIndexImport } from './routes/settings/diagnoses/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsIndexRoute = ReportsIndexImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsTestMethodsIndexRoute = SettingsTestMethodsIndexImport.update({
  id: '/settings/test-methods/',
  path: '/settings/test-methods/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsStaffIndexRoute = SettingsStaffIndexImport.update({
  id: '/settings/staff/',
  path: '/settings/staff/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRecommendationsIndexRoute =
  SettingsRecommendationsIndexImport.update({
    id: '/settings/recommendations/',
    path: '/settings/recommendations/',
    getParentRoute: () => rootRoute,
  } as any)

const SettingsMutationsIndexRoute = SettingsMutationsIndexImport.update({
  id: '/settings/mutations/',
  path: '/settings/mutations/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIllnessesIndexRoute = SettingsIllnessesIndexImport.update({
  id: '/settings/illnesses/',
  path: '/settings/illnesses/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsGenesIndexRoute = SettingsGenesIndexImport.update({
  id: '/settings/genes/',
  path: '/settings/genes/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsDiagnosesIndexRoute = SettingsDiagnosesIndexImport.update({
  id: '/settings/diagnoses/',
  path: '/settings/diagnoses/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/diagnoses/': {
      id: '/settings/diagnoses/'
      path: '/settings/diagnoses'
      fullPath: '/settings/diagnoses'
      preLoaderRoute: typeof SettingsDiagnosesIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/genes/': {
      id: '/settings/genes/'
      path: '/settings/genes'
      fullPath: '/settings/genes'
      preLoaderRoute: typeof SettingsGenesIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/illnesses/': {
      id: '/settings/illnesses/'
      path: '/settings/illnesses'
      fullPath: '/settings/illnesses'
      preLoaderRoute: typeof SettingsIllnessesIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/mutations/': {
      id: '/settings/mutations/'
      path: '/settings/mutations'
      fullPath: '/settings/mutations'
      preLoaderRoute: typeof SettingsMutationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/recommendations/': {
      id: '/settings/recommendations/'
      path: '/settings/recommendations'
      fullPath: '/settings/recommendations'
      preLoaderRoute: typeof SettingsRecommendationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/staff/': {
      id: '/settings/staff/'
      path: '/settings/staff'
      fullPath: '/settings/staff'
      preLoaderRoute: typeof SettingsStaffIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/test-methods/': {
      id: '/settings/test-methods/'
      path: '/settings/test-methods'
      fullPath: '/settings/test-methods'
      preLoaderRoute: typeof SettingsTestMethodsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/reports': typeof ReportsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/settings/diagnoses': typeof SettingsDiagnosesIndexRoute
  '/settings/genes': typeof SettingsGenesIndexRoute
  '/settings/illnesses': typeof SettingsIllnessesIndexRoute
  '/settings/mutations': typeof SettingsMutationsIndexRoute
  '/settings/recommendations': typeof SettingsRecommendationsIndexRoute
  '/settings/staff': typeof SettingsStaffIndexRoute
  '/settings/test-methods': typeof SettingsTestMethodsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/reports': typeof ReportsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/settings/diagnoses': typeof SettingsDiagnosesIndexRoute
  '/settings/genes': typeof SettingsGenesIndexRoute
  '/settings/illnesses': typeof SettingsIllnessesIndexRoute
  '/settings/mutations': typeof SettingsMutationsIndexRoute
  '/settings/recommendations': typeof SettingsRecommendationsIndexRoute
  '/settings/staff': typeof SettingsStaffIndexRoute
  '/settings/test-methods': typeof SettingsTestMethodsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/reports/': typeof ReportsIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/settings/diagnoses/': typeof SettingsDiagnosesIndexRoute
  '/settings/genes/': typeof SettingsGenesIndexRoute
  '/settings/illnesses/': typeof SettingsIllnessesIndexRoute
  '/settings/mutations/': typeof SettingsMutationsIndexRoute
  '/settings/recommendations/': typeof SettingsRecommendationsIndexRoute
  '/settings/staff/': typeof SettingsStaffIndexRoute
  '/settings/test-methods/': typeof SettingsTestMethodsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/reports'
    | '/settings'
    | '/settings/diagnoses'
    | '/settings/genes'
    | '/settings/illnesses'
    | '/settings/mutations'
    | '/settings/recommendations'
    | '/settings/staff'
    | '/settings/test-methods'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/reports'
    | '/settings'
    | '/settings/diagnoses'
    | '/settings/genes'
    | '/settings/illnesses'
    | '/settings/mutations'
    | '/settings/recommendations'
    | '/settings/staff'
    | '/settings/test-methods'
  id:
    | '__root__'
    | '/'
    | '/reports/'
    | '/settings/'
    | '/settings/diagnoses/'
    | '/settings/genes/'
    | '/settings/illnesses/'
    | '/settings/mutations/'
    | '/settings/recommendations/'
    | '/settings/staff/'
    | '/settings/test-methods/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  SettingsDiagnosesIndexRoute: typeof SettingsDiagnosesIndexRoute
  SettingsGenesIndexRoute: typeof SettingsGenesIndexRoute
  SettingsIllnessesIndexRoute: typeof SettingsIllnessesIndexRoute
  SettingsMutationsIndexRoute: typeof SettingsMutationsIndexRoute
  SettingsRecommendationsIndexRoute: typeof SettingsRecommendationsIndexRoute
  SettingsStaffIndexRoute: typeof SettingsStaffIndexRoute
  SettingsTestMethodsIndexRoute: typeof SettingsTestMethodsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReportsIndexRoute: ReportsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  SettingsDiagnosesIndexRoute: SettingsDiagnosesIndexRoute,
  SettingsGenesIndexRoute: SettingsGenesIndexRoute,
  SettingsIllnessesIndexRoute: SettingsIllnessesIndexRoute,
  SettingsMutationsIndexRoute: SettingsMutationsIndexRoute,
  SettingsRecommendationsIndexRoute: SettingsRecommendationsIndexRoute,
  SettingsStaffIndexRoute: SettingsStaffIndexRoute,
  SettingsTestMethodsIndexRoute: SettingsTestMethodsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/reports/",
        "/settings/",
        "/settings/diagnoses/",
        "/settings/genes/",
        "/settings/illnesses/",
        "/settings/mutations/",
        "/settings/recommendations/",
        "/settings/staff/",
        "/settings/test-methods/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/reports/": {
      "filePath": "reports/index.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.tsx"
    },
    "/settings/diagnoses/": {
      "filePath": "settings/diagnoses/index.tsx"
    },
    "/settings/genes/": {
      "filePath": "settings/genes/index.tsx"
    },
    "/settings/illnesses/": {
      "filePath": "settings/illnesses/index.tsx"
    },
    "/settings/mutations/": {
      "filePath": "settings/mutations/index.tsx"
    },
    "/settings/recommendations/": {
      "filePath": "settings/recommendations/index.tsx"
    },
    "/settings/staff/": {
      "filePath": "settings/staff/index.tsx"
    },
    "/settings/test-methods/": {
      "filePath": "settings/test-methods/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
